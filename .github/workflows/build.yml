on:
    push:
    repository_dispatch:
    
jobs:
    backup:
        runs-on: ubuntu-latest
        if: github.event_name == 'push'
        steps:
        - uses: actions/checkout@main
        - run: |
              git fetch --unshallow
              echo '${{secrets.KEY}}' > key
              chmod 400 key
              git -c core.sshCommand='ssh -i key -o StrictHostKeyChecking=no' push -f git@bitbucket.org:chaowenguo/${GITHUB_REPOSITORY#*/}
    euserv:
        runs-on: ubuntu-latest
        if: github.event_name == 'dummy'
        steps:
        - uses: actions/checkout@main
        - run: |
              echo '${{secrets.KEY}}' > key
              sudo apt install -y --no-install-recommends miredo
              password=jWH9228H
              ip=2a02:0180:0006:0001:0000:0000:0000:3142
              sshpass -p $password scp -o StrictHostKeyChecking=no key root@[$ip]:/root/.ssh
              sshpass -p $password scp -o StrictHostKeyChecking=no encrypt.py period.py root@[$ip]:/root
              sshpass -p $password scp -o StrictHostKeyChecking=no encrypt.service encrypt.timer 12h.service 12h.timer 2h.service 2h.timer 15min.service 15min.timer root@[$ip]:/usr/lib/systemd/system
              sshpass -p $password ssh -o root@$ip 'ssh-keygen -yf /root/.ssh/key > /root/.ssh/authorized_keys;
              sed -i s/#PasswordAuthentication\ yes/PasswordAuthentication\ no/g /etc/ssh/sshd_config;
              systemctl restart ssh;
              apt update;
              wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb;
              apt install -y --no-install-recommends ./google-chrome-stable_current_amd64.deb libx11-xcb1 x2goserver-xsession certbot python3-aiohttp python3-asyncssh curl;
              rm google-chrome-stable_current_amd64.deb;
              echo nameserver 2a03:7900:2:0:31:3:104:161 > /etc/resolv.conf;
              certbot certonly --manual-public-ip-logging-ok --email chaowen.guo1@gmail.com --agree-tos --manual --preferred-challenges=dns --manual-auth-hook python3\ ~/encrypt.py\ pre --manual-cleanup-hook python3\ ~/encrypt.py\ post -d *.chaowenguo.eu.org;
              systemctl enable encrypt.timer 12h.timer 2h.timer 10min.timer --now'
              #curl -X PUT -H 'authorization: token ${{secrets.GITHUB}}' -d '{"message":"message","content":"'`base64 -w 0 euserv.key`'"}' https://api.github.com/repos/chaowenGUO/key/contents/euserv.key
    server:
        runs-on: ubuntu-latest
        if: github.event_name == 'dummy'
        steps:
        - uses: actions/checkout@main
        - uses: actions/setup-python@main
          with:
              python-version: 3.x
        - uses: actions/setup-node@main
          with:
              node-version: 18.x
        - run: |
              #echo ${{secrets.PASSWORD}}${{secrets.PASSWORD}} | sed 's/./& /g'
              echo '${{secrets.OCI}}' > oci.key
              echo '${{secrets.KEY}}' > key
              chmod 400 key
              echo '${{secrets.GCLOUD}}' > gcloud
              pip install oci asyncssh aiohttp google-auth requests           
              python server.py ${{secrets.AZURE}} ${{secrets.AZUREPASSWORD}} ${{secrets.TENANT}} ${{secrets.GITHUB}} ${{secrets.PASSWORD}}${{secrets.PASSWORD}}
              #python win.py ${{secrets.AZURE}} ${{secrets.AZUREPASSWORD}} ${{secrets.TENANT}} ${{secrets.PASSWORD}}${{secrets.PASSWORD}}
              curl https://bitbucket.org/chaowenguo/common/raw/main/package.json > package.json
              #npm install node-fetch ssh2-promise sskpk
              #node server.js ${{secrets.PASSWORD}}${{secrets.PASSWORD}}
    arm:
        runs-on: ubuntu-latest
        if: github.event.action == '2min'
        steps:
        - uses: actions/checkout@main
        - uses: actions/setup-python@main
          with:
              python-version: 3.x
        - run: |
              echo '${{secrets.OCI}}' > oci.key
              echo '${{secrets.KEY}}' > key
              chmod 400 key
              pip install oci asyncssh aiohttp
              python arm.py
    win:
        runs-on: ubuntu-latest
        if: github.event_name == 'dummy'
        steps:
        - uses: actions/checkout@main
        - uses: actions/setup-python@main
          with:
              python-version: 3.x
        - uses: actions/setup-node@main
          with:
              node-version: 18.x
        - run: |
              #pip install aiohttp
              #python win.py ${{secrets.AZURE}} ${{secrets.AZUREPASSWORD}} ${{secrets.TENANT}} ${{secrets.PASSWORD}}${{secrets.PASSWORD}}
              curl https://bitbucket.org/chaowenguo/common/raw/main/package.json > package.json
              npm install node-fetch
              node win.js ${{secrets.PASSWORD}}${{secrets.PASSWORD}}
    clean:
        runs-on: ubuntu-latest
        permissions: 
            actions: write
        steps:
        - uses: actions/setup-python@main
          with:
              python-version: 3.x
        - run: |
              pip install aiohttp
              curl https://bitbucket.org/chaowenguo/common/raw/main/clean.py | python - ${{secrets.GITHUB_TOKEN}}
